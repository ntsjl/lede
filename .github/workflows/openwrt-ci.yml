# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on : ubuntu-latest
    
    
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
          sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_sunxi=y
          CONFIG_TARGET_sunxi_cortexa7=y
          CONFIG_TARGET_sunxi_cortexa7_DEVICE_cubietech_cubietruck=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_NFS_KERNEL_SERVER_V4=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_aria2=y
          CONFIG_PACKAGE_ariang=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-extra=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-ipsec=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_kmod-crypto-cbc=y
          CONFIG_PACKAGE_kmod-crypto-cts=y
          CONFIG_PACKAGE_kmod-crypto-deflate=y
          CONFIG_PACKAGE_kmod-crypto-des=y
          CONFIG_PACKAGE_kmod-crypto-echainiv=y
          CONFIG_PACKAGE_kmod-crypto-hmac=y
          CONFIG_PACKAGE_kmod-crypto-md5=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dnsresolver=y
          CONFIG_PACKAGE_kmod-fs-exportfs=y
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-common-rpcsec=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-nfsd=y
          CONFIG_PACKAGE_kmod-ipsec=y
          CONFIG_PACKAGE_kmod-ipsec4=y
          CONFIG_PACKAGE_kmod-ipsec6=y
          CONFIG_PACKAGE_kmod-ipt-extra=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-ipsec=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-iptunnel4=y
          CONFIG_PACKAGE_kmod-iptunnel6=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
          CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libdb47=y
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libexif=y
          CONFIG_PACKAGE_libffmpeg-audio-dec=y
          CONFIG_PACKAGE_libflac=y
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libid3tag=y
          CONFIG_PACKAGE_libjpeg-turbo=y
          CONFIG_PACKAGE_libkeyutils=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmount=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libogg=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libtirpc=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_libvorbis=y
          CONFIG_PACKAGE_libwrap=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_luci-app-aliddns=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          CONFIG_PACKAGE_luci-app-minidlna=y
          CONFIG_PACKAGE_luci-app-nfs=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-aliddns-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ipsec-vpnd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-nfs-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_minidlna=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_nfs-kernel-server=y
          CONFIG_PACKAGE_nfs-kernel-server-utils=y
          CONFIG_PACKAGE_nfs-utils=y
          CONFIG_PACKAGE_nfs-utils-libs=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_rpcbind=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-dbm=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_strongswan=y
          CONFIG_PACKAGE_strongswan-charon=y
          CONFIG_PACKAGE_strongswan-ipsec=y
          CONFIG_PACKAGE_strongswan-minimal=y
          CONFIG_PACKAGE_strongswan-mod-aes=y
          CONFIG_PACKAGE_strongswan-mod-gmp=y
          CONFIG_PACKAGE_strongswan-mod-hmac=y
          CONFIG_PACKAGE_strongswan-mod-kernel-libipsec=y
          CONFIG_PACKAGE_strongswan-mod-kernel-netlink=y
          CONFIG_PACKAGE_strongswan-mod-nonce=y
          CONFIG_PACKAGE_strongswan-mod-pubkey=y
          CONFIG_PACKAGE_strongswan-mod-random=y
          CONFIG_PACKAGE_strongswan-mod-sha1=y
          CONFIG_PACKAGE_strongswan-mod-socket-default=y
          CONFIG_PACKAGE_strongswan-mod-stroke=y
          CONFIG_PACKAGE_strongswan-mod-updown=y
          CONFIG_PACKAGE_strongswan-mod-x509=y
          CONFIG_PACKAGE_strongswan-mod-xauth-generic=y
          CONFIG_PACKAGE_strongswan-mod-xcbc=y
          CONFIG_PACKAGE_terminfo=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_RPCBIND_LIBWRAP=y
          CONFIG_RPCBIND_RMTCALLS=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_STRONGSWAN_ROUTING_TABLE="220"
          CONFIG_STRONGSWAN_ROUTING_TABLE_PRIO="220"
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
